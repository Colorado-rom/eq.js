var eqjs={nodes:[],eqsLength:0,debounce:function(a,b,c){var d;return function(){var e=this,f=arguments,g=function(){d=null,c||a.apply(e,f)},h=c&&!d;clearTimeout(d),d=setTimeout(g,b),h&&a.apply(e,f)}},refreshNodes:function(){eqjs.nodes=document.querySelectorAll("[eq-pts]"),eqjs.nodesLength=eqjs.nodes.length},sortObj:function(a){var b=[],c={};for(var d in a)a.hasOwnProperty(d)&&b.push({key:d,value:a[d]});b.sort(function(a,b){return a.value-b.value});for(var e=0;e<b.length;e++){var f=b[e];c[f.key]=f.value}return c},states:function(){var a,b,c=[],d=[];for(b=0;b<eqjs.nodesLength;b++){c.push(eqjs.nodes[b].offsetWidth),a={};try{a=JSON.parse(eqjs.nodes[b].getAttribute("eq-pts")),d.push(a)}catch(e){console.log("Invalid JSON. Remember to wrap your attribute in single quotes (') and your keys in double quotes (\")")}}for(b=0;b<eqjs.nodesLength;b++){var f=c[b],g=eqjs.nodes[b];a=d[b];var h=Object.keys(a),i=h.length,j=h[0],k=h[i-1];if(f<a[j])g.removeAttribute("eq-state");else if(f>=a[k])g.setAttribute("eq-state",k);else for(var l=0;i>l;l++){var m=h[l],n=h[l+1];if(0===l&&f<a[m]){g.removeAttribute("eq-state");break}if(void 0===n){g.setAttribute("eq-state",m);break}if(f>=a[m]&&f<a[n]){g.setAttribute("eq-state",m);break}}}}};!function(){window.onload=function(){eqjs.refreshNodes(),eqjs.states()},window.onresize=eqjs.debounce(function(){eqjs.states()},20)}(eqjs);